generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model DiaEjercicioAsignado {
  id                    Int                   @id @default(autoincrement()) @db.UnsignedInt
  completado            Boolean
  diaPlanId             Int                   @db.UnsignedInt
  EjercicioAsignadoId   Int                   @db.UnsignedInt
  diasPlan              diasPlan              @relation(fields: [diaPlanId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_diaejercicioasignado_diaplan")
  EjercicioAsignadoPlan EjercicioAsignadoPlan @relation(fields: [EjercicioAsignadoId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_diaejercicioasignado_ejercicioasignado")

  @@index([diaPlanId], map: "fk_diaejercicioasignado_diaplan")
  @@index([EjercicioAsignadoId], map: "fk_diaejercicioasignado_ejercicioasignado")
}

model diasPlan {
  id                   Int                    @id @default(autoincrement()) @db.UnsignedInt
  fecha                DateTime               @db.Date
  planId               Int                    @db.UnsignedInt
  DiaEjercicioAsignado DiaEjercicioAsignado[]
  plan                 plan                   @relation(fields: [planId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_diasplan_plan")

  @@unique([planId, fecha], name: "unique_plan_fecha")
  @@index([planId], map: "fk_diasplan_plan")
}

model EjercicioAsignadoPlan {
  id                   Int                    @id @default(autoincrement()) @db.UnsignedInt
  duracion             Decimal                @db.Decimal(5, 2)
  ejercicioId          BigInt                 @db.UnsignedBigInt
  planId               Int                    @db.UnsignedInt
  DiaEjercicioAsignado DiaEjercicioAsignado[]
  ejercicios           ejercicios             @relation(fields: [ejercicioId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ejercicioasignadoplan_ejercicio")
  plan                 plan                   @relation(fields: [planId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ejercicioasignadoplan_plan")

  @@unique([planId, ejercicioId], name: "unique_plan_ejercicio")
  @@index([ejercicioId], map: "fk_ejercicioasignadoplan_ejercicio")
  @@index([planId], map: "fk_ejercicioasignadoplan_plan")
}

model ejercicios {
  id                    BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  nombre                String                  @db.VarChar(255)
  MET                   Decimal                 @db.Decimal(5, 2)
  EjercicioAsignadoPlan EjercicioAsignadoPlan[]
}

model plan {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedInt
  nombre                String                  @db.VarChar(255)
  descripcion           String                  @db.Text
  userId                Int                     @db.UnsignedInt
  EjercicioAsignadoPlan EjercicioAsignadoPlan[]
  diasPlan              diasPlan[]
  user                  user                    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_plan_user")

  @@index([userId], map: "fk_plan_user")
}

model user {
  id           Int     @id @default(autoincrement()) @db.UnsignedInt
  nombre       String  @db.VarChar(255) 
  contrasena   String  @db.VarChar(255) 
  correo       String  @db.VarChar(255) @unique
  pesoKg       Decimal @db.Decimal(5, 2)
  edad         Int
  esturaMetros Decimal @db.Decimal(3, 2)
  plan         plan[]
}
